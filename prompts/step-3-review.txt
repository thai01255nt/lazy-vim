# Step 3: Implementation Review

## Context Check
**MANUAL WORKFLOW ENFORCEMENT**

Before proceeding, check if **feature planning context** exists in this chat session. If NO feature planning context available:

ðŸ›‘ **STOP - Do NOT auto-execute step-1**
ðŸ“‹ **REQUEST**: Please manually run `step-1-context` first to gather feature planning context
ðŸ”„ **THEN**: Return to run `step-3-review`

**LLM must ask user to run step-1 manually - DO NOT auto-execute.**

## Purpose
Review implementation against established patterns, planning decisions, and quality standards.

## Process
1. **Load Context** â†’ Use step-1 context or specified planning file
2. **Analyze Implementation** â†’ Compare user's implementation against skeleton and patterns
3. **Validate Patterns** â†’ Ensure consistency with existing codebase
4. **Suggest Improvements** â†’ Recommend optimizations and corrections

## Review Areas

### Pattern Consistency
- Compare against existing similar implementations
- Verify naming conventions match codebase patterns
- Check architectural pattern adherence
- Validate integration with existing services

### Code Quality
- Error handling follows project patterns
- Logging uses established format and levels
- Dependencies properly injected
- Resource cleanup implemented
- Security considerations addressed

### Planning Alignment
- Implementation matches planning decisions
- All planned components included
- Integration points properly implemented
- Requirements satisfied

## Quality Validation (Auto-Applied)
- [ ] Error handling matches project patterns
- [ ] Logging follows established format and levels
- [ ] Dependencies properly injected following existing patterns
- [ ] Code consistency with existing implementations
- [ ] Security considerations addressed
- [ ] Performance implications considered
- [ ] Resource cleanup (connections, file handles, etc.)

## Planning Updates
Highlight any planning updates needed:
```
ðŸ”„ PLANNING UPDATE: [Description of what needs to be added/changed in planning file]
```

## Output Format
### Review Summary
- Overall assessment of implementation quality
- Adherence to planning and patterns
- Key strengths and areas for improvement

### Specific Recommendations
- Concrete suggestions for improvements
- Code examples for corrections
- Performance optimization opportunities
- Security enhancements

### Next Steps
- Priority order for addressing feedback
- Integration guidance
- Testing recommendations