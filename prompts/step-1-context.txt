# Step 1: Context Analysis

## Purpose
Gather all necessary context for development by reading project overview, planning file, and scanning codebase patterns.

## Process
1. **Read PROJECT-OVERVIEW.md** → Extract tech stack, architecture patterns, constraints
2. **Auto-Find Planning File** → Scan `.claude/custom/planning/` for relevant planning file
3. **Auto-Find Tasks File** → Check `.claude/custom/tasks/` for corresponding tasks file
4. **Scan Codebase** → Use `ls`/`glob`/`grep` (or `Read`/`Grep` tools) to identify existing patterns
5. **Analyze Integration Points** → Understand how new code will connect to existing system

## Planning File Detection
- Scan `.claude/custom/planning/` folder
- Match feature context to likely planning files
- Auto-suggest most relevant file: "Found `user-authentication.md`, use this? (Y/n)"
- Allow manual override: "Or specify different path:"

## Tasks File Detection
- Check `.claude/custom/tasks/` for file with same name as planning file
- **If found**: Auto-load tasks file: "Found corresponding tasks file `user-authentication.md`"
- **If missing**: Stop and request manual step execution: "⚠️ No tasks file found. Please run step-tasks first to generate tasks breakdown, then rerun step-1-context."

## Context Analysis Output
### Project Context
- Tech stack and frameworks in use
- Architecture patterns (layered, microservices, etc.)
- Code organization and naming conventions
- Testing approach and patterns

### Planning Context  
- Feature requirements and scope
- Chosen architecture approach
- Components to be implemented
- Integration points and dependencies

### Tasks Context (if available)
- Current task breakdown and priorities
- Completed vs remaining work
- Task dependencies and milestones
- Implementation progress status

### Codebase Patterns
- Similar existing implementations
- Naming conventions used
- Error handling patterns
- Logging and monitoring patterns
- Configuration patterns

## Session Context Storage
Store context for use by subsequent steps in this chat session:
- Project tech stack and patterns
- Planning file path and contents
- Tasks file path and contents (if available)
- Identified codebase patterns
- Integration requirements